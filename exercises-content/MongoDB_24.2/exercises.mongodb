// $lookup in join

// Selecione todos os clientes com as suas respectivas transações feitas;
use('agg_example');
db.clients.aggregate([
  {
    $lookup: {
      from: 'transactions',
      let: { cliente: '$name'},
      pipeline: [
        {
          $match: {
            $expr: {
              $eq: ['$from', '$$cliente']
            }
          }
        }
      ],
      as: 'transactions'
    }
  }
]);

// Selecione os quatro primeiros clientes com as suas respectivas transações recebidas ordenados pelo estado em ordem alfabética;
use('agg_example');
db.clients.aggregate([
  {
    $lookup: {
      from: 'transactions',
      let: { cliente: '$name'},
      pipeline: [
        {
          $match: {
            $expr: {
              $eq: ['$to', '$$cliente']
            }
          }
        }
      ],
      as: 'transactions'
    }
  },
  { $sort: { State: 1}},
  { $limit: 4 },
]);

// Selecione todos os cliente do estado da "Florida" e suas respectivas transações recebidas.

use('agg_example');
db.clients.aggregate([
  { 
    $match: {
      State: 'Florida'
    }
  },
  {
    $lookup: {
      from: 'transactions',
      let: { cliente: '$name'},
      pipeline: [
        {
          $match: {
            $expr: {
              $eq: ['$to', '$$cliente']
            }
          }
        }
      ],
      as: 'transactions'
    }
  }
]);

// ------------------------------------------------------
// adição/soma $add

// Utilizando o banco de dados storage. Calcule qual o custo total de cada produto, considerando o preço de compra e os impostos.

db.products.aggregate([
  {
    $project: {
      _id: 0,
      name: 1,
      total_price: { 
        $add: ['$taxes', '$purchase_price']
      }
    }
  }
]);

// ---------------------------------------------------
// subtração $subtract

// Utilizando o banco de dados storage, Calcule qual o lucro total de cada produto, considerando o preço de compra, os impostos e seu valor de venda.

db.products.aggregate([
  {
    $project: {
      _id: 0,
      name: 1,
      lucro_total: { 
        $subtract: [
          '$sale_price',
          { 
            $add: ['$taxes', '$purchase_price'] 
          }
        ]
      }
    }
  }
]);

// ---------------------------------------------------
// arredondamento de valores $ceil, $floor e $round

// Utilizando o banco de dados storage:
// Retorne o menor número inteiro relativo ao preço de venda de cada produto;

db.products.aggregate([
  {
    $project: {
      _id: 0,
      name: 1,
      total_price: { 
        $floor: ['$sale_price']
      }
    }
  }
]);


// Retorne o maior número inteiro relativo ao lucro total sobre cada produto. Nota: Desconsiderar taxas (taxes)
db.products.aggregate([
  {
    $project: {
      _id: 0,
      name: 1,
      lucro_total: {
          $ceil: [{
            $subtract: ['$sale_price', '$purchase_price']
          }]
      }
    }
  }
]);

// -------------------------------------------------
// valor absoluto $abs

// Utilizando o banco de dados storage , faça o seguinte exercício:
// Calcule o valor absoluto do lucro total de cada produto.

db.products.aggregate([
  {
    $project: {
      _id: 0,
      name: 1,
      lucro_total: { 
        $abs: {
          $subtract: [
            '$sale_price',
            { 
              $add: ['$taxes', '$purchase_price'] 
            }
          ]
        }
      }
    }
  }
]);


// --------------------------------------------------
// multiplicação $multiply

// Utilizando o banco de dados storage , faça os seguintes exercícios:
// Calcule qual o valor total em estoque de cada produto, considerando o preço de venda e a quantidade;
db.products.aggregate([
  {
    $project: {
      _id: 0,
      name: 1,
      total_value: { 
        $multiply: ['$quantity', '$purchase_price']
      }
    }
  }
]);

// Calcule qual será o lucro total de cada produto caso todo o estoque seja vendido.

db.products.aggregate([
  {
    $project: {
      _id: 0,
      name: 1,
      total_value: { 
        $multiply: [
            { $subtract: [
            '$sale_price',
            { 
              $add: ['$taxes', '$purchase_price'] 
            }
          ]},
          '$quantity'
        ]
      }
    }
  }
]);